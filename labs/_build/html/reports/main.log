Traceback (most recent call last):
  File "C:\Users\smegdm\AppData\Local\Programs\Python\Python310\lib\site-packages\jupyter_cache\executors\utils.py", line 51, in single_nb_execution
    executenb(
  File "C:\Users\smegdm\AppData\Local\Programs\Python\Python310\lib\site-packages\nbclient\client.py", line 1117, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\smegdm\AppData\Local\Programs\Python\Python310\lib\site-packages\nbclient\util.py", line 78, in wrapped
    return just_run(coro(*args, **kwargs))
  File "C:\Users\smegdm\AppData\Local\Programs\Python\Python310\lib\site-packages\nbclient\util.py", line 57, in just_run
    return loop.run_until_complete(coro)
  File "C:\Users\smegdm\AppData\Local\Programs\Python\Python310\lib\asyncio\base_events.py", line 641, in run_until_complete
    return future.result()
  File "C:\Users\smegdm\AppData\Local\Programs\Python\Python310\lib\site-packages\nbclient\client.py", line 558, in async_execute
    await self.async_execute_cell(
  File "C:\Users\smegdm\AppData\Local\Programs\Python\Python310\lib\site-packages\nbclient\client.py", line 862, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "C:\Users\smegdm\AppData\Local\Programs\Python\Python310\lib\site-packages\nbclient\client.py", line 765, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import os
from ipywidgets import Tab, HTML

tests_count = len(os.listdir('tests'))

children = []
output_pattern = lambda input_text, result: HTML(
    f'''
    <div>
        <b>Input</b><br>
        {input_text}<br><br>
        <b>Result</b><br>
        {result}
    </div>
    '''
)

for i in range(tests_count):
    with open(f'tests/test_{i}.txt') as f:
        lines = [line.strip() for line in f.readlines() if line != '\n']
        result = ''
        try:
            srs = parse(lines)
            verdict, overlap = confluence_verdict(srs)
            result =  f'{verdict}<br>{overlap if overlap != None else ""}'
        except Exception as err:
            result = f'<b>Parse error: </b>{err}'
        children.append(output_pattern('<br>'.join(lines), result))

tab = Tab()
for i in range(tests_count):
    tab.set_title(i, HTML(f'<b>Test {i + 1}</b>'))
tab.children = children

tab
------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mTypeError[0m                                 Traceback (most recent call last)
[1;32m~\AppData\Local\Temp/ipykernel_12936/344739405.py[0m in [0;36m<module>[1;34m[0m
[0;32m     30[0m [0mtab[0m [1;33m=[0m [0mTab[0m[1;33m([0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0;32m     31[0m [1;32mfor[0m [0mi[0m [1;32min[0m [0mrange[0m[1;33m([0m[0mtests_count[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[1;32m---> 32[1;33m     [0mtab[0m[1;33m.[0m[0mset_title[0m[1;33m([0m[0mi[0m[1;33m,[0m [0mHTML[0m[1;33m([0m[1;34mf'<b>Test {i + 1}</b>'[0m[1;33m)[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m     33[0m [0mtab[0m[1;33m.[0m[0mchildren[0m [1;33m=[0m [0mchildren[0m[1;33m[0m[1;33m[0m[0m
[0;32m     34[0m [1;33m[0m[0m

[1;32m~\AppData\Local\Programs\Python\Python310\lib\site-packages\ipywidgets\widgets\widget_selectioncontainer.py[0m in [0;36mset_title[1;34m(self, index, title)[0m
[0;32m     44[0m         [0mindex[0m [1;33m=[0m [0municode_type[0m[1;33m([0m[0mint[0m[1;33m([0m[0mindex[0m[1;33m)[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0;32m     45[0m         [0mself[0m[1;33m.[0m[0m_titles[0m[1;33m[[0m[0mindex[0m[1;33m][0m [1;33m=[0m [0mtitle[0m[1;33m[0m[1;33m[0m[0m
[1;32m---> 46[1;33m         [0mself[0m[1;33m.[0m[0msend_state[0m[1;33m([0m[1;34m'_titles'[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m     47[0m [1;33m[0m[0m
[0;32m     48[0m     [1;32mdef[0m [0mget_title[0m[1;33m([0m[0mself[0m[1;33m,[0m [0mindex[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\AppData\Local\Programs\Python\Python310\lib\site-packages\ipywidgets\widgets\widget.py[0m in [0;36msend_state[1;34m(self, key)[0m
[0;32m    487[0m             [0mstate[0m[1;33m,[0m [0mbuffer_paths[0m[1;33m,[0m [0mbuffers[0m [1;33m=[0m [0m_remove_buffers[0m[1;33m([0m[0mstate[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0;32m    488[0m             [0mmsg[0m [1;33m=[0m [1;33m{[0m[1;34m'method'[0m[1;33m:[0m [1;34m'update'[0m[1;33m,[0m [1;34m'state'[0m[1;33m:[0m [0mstate[0m[1;33m,[0m [1;34m'buffer_paths'[0m[1;33m:[0m [0mbuffer_paths[0m[1;33m}[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 489[1;33m             [0mself[0m[1;33m.[0m[0m_send[0m[1;33m([0m[0mmsg[0m[1;33m,[0m [0mbuffers[0m[1;33m=[0m[0mbuffers[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    490[0m [1;33m[0m[0m
[0;32m    491[0m [1;33m[0m[0m

[1;32m~\AppData\Local\Programs\Python\Python310\lib\site-packages\ipywidgets\widgets\widget.py[0m in [0;36m_send[1;34m(self, msg, buffers)[0m
[0;32m    735[0m         [1;34m"""Sends a message to the model in the front-end."""[0m[1;33m[0m[1;33m[0m[0m
[0;32m    736[0m         [1;32mif[0m [0mself[0m[1;33m.[0m[0mcomm[0m [1;32mis[0m [1;32mnot[0m [1;32mNone[0m [1;32mand[0m [0mself[0m[1;33m.[0m[0mcomm[0m[1;33m.[0m[0mkernel[0m [1;32mis[0m [1;32mnot[0m [1;32mNone[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 737[1;33m             [0mself[0m[1;33m.[0m[0mcomm[0m[1;33m.[0m[0msend[0m[1;33m([0m[0mdata[0m[1;33m=[0m[0mmsg[0m[1;33m,[0m [0mbuffers[0m[1;33m=[0m[0mbuffers[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    738[0m [1;33m[0m[0m
[0;32m    739[0m     [1;32mdef[0m [0m_repr_keys[0m[1;33m([0m[0mself[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\AppData\Local\Programs\Python\Python310\lib\site-packages\ipykernel\comm\comm.py[0m in [0;36msend[1;34m(self, data, metadata, buffers)[0m
[0;32m    120[0m     [1;32mdef[0m [0msend[0m[1;33m([0m[0mself[0m[1;33m,[0m [0mdata[0m[1;33m=[0m[1;32mNone[0m[1;33m,[0m [0mmetadata[0m[1;33m=[0m[1;32mNone[0m[1;33m,[0m [0mbuffers[0m[1;33m=[0m[1;32mNone[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    121[0m         [1;34m"""Send a message to the frontend-side version of this comm"""[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 122[1;33m         self._publish_msg('comm_msg',
[0m[0;32m    123[0m             [0mdata[0m[1;33m=[0m[0mdata[0m[1;33m,[0m [0mmetadata[0m[1;33m=[0m[0mmetadata[0m[1;33m,[0m [0mbuffers[0m[1;33m=[0m[0mbuffers[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m
[0;32m    124[0m         )

[1;32m~\AppData\Local\Programs\Python\Python310\lib\site-packages\ipykernel\comm\comm.py[0m in [0;36m_publish_msg[1;34m(self, msg_type, data, metadata, buffers, **keys)[0m
[0;32m     64[0m         [0mmetadata[0m [1;33m=[0m [1;33m{[0m[1;33m}[0m [1;32mif[0m [0mmetadata[0m [1;32mis[0m [1;32mNone[0m [1;32melse[0m [0mmetadata[0m[1;33m[0m[1;33m[0m[0m
[0;32m     65[0m         [0mcontent[0m [1;33m=[0m [0mjson_clean[0m[1;33m([0m[0mdict[0m[1;33m([0m[0mdata[0m[1;33m=[0m[0mdata[0m[1;33m,[0m [0mcomm_id[0m[1;33m=[0m[0mself[0m[1;33m.[0m[0mcomm_id[0m[1;33m,[0m [1;33m**[0m[0mkeys[0m[1;33m)[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[1;32m---> 66[1;33m         self.kernel.session.send(self.kernel.iopub_socket, msg_type,
[0m[0;32m     67[0m             [0mcontent[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m
[0;32m     68[0m             [0mmetadata[0m[1;33m=[0m[0mjson_clean[0m[1;33m([0m[0mmetadata[0m[1;33m)[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\AppData\Local\Programs\Python\Python310\lib\site-packages\jupyter_client\session.py[0m in [0;36msend[1;34m(self, stream, msg_or_type, content, parent, ident, buffers, track, header, metadata)[0m
[0;32m    840[0m         [1;32mif[0m [0mself[0m[1;33m.[0m[0madapt_version[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    841[0m             [0mmsg[0m [1;33m=[0m [0madapt[0m[1;33m([0m[0mmsg[0m[1;33m,[0m [0mself[0m[1;33m.[0m[0madapt_version[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 842[1;33m         [0mto_send[0m [1;33m=[0m [0mself[0m[1;33m.[0m[0mserialize[0m[1;33m([0m[0mmsg[0m[1;33m,[0m [0mident[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    843[0m         [0mto_send[0m[1;33m.[0m[0mextend[0m[1;33m([0m[0mbuffers[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0;32m    844[0m         [0mlongest[0m [1;33m=[0m [0mmax[0m[1;33m([0m[1;33m[[0m[0mlen[0m[1;33m([0m[0ms[0m[1;33m)[0m [1;32mfor[0m [0ms[0m [1;32min[0m [0mto_send[0m[1;33m][0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\AppData\Local\Programs\Python\Python310\lib\site-packages\jupyter_client\session.py[0m in [0;36mserialize[1;34m(self, msg, ident)[0m
[0;32m    714[0m             [0mcontent[0m [1;33m=[0m [0mself[0m[1;33m.[0m[0mnone[0m[1;33m[0m[1;33m[0m[0m
[0;32m    715[0m         [1;32melif[0m [0misinstance[0m[1;33m([0m[0mcontent[0m[1;33m,[0m [0mdict[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 716[1;33m             [0mcontent[0m [1;33m=[0m [0mself[0m[1;33m.[0m[0mpack[0m[1;33m([0m[0mcontent[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    717[0m         [1;32melif[0m [0misinstance[0m[1;33m([0m[0mcontent[0m[1;33m,[0m [0mbytes[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    718[0m             [1;31m# content is already packed, as in a relayed message[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\AppData\Local\Programs\Python\Python310\lib\site-packages\jupyter_client\session.py[0m in [0;36mjson_packer[1;34m(obj)[0m
[0;32m     95[0m [1;32mdef[0m [0mjson_packer[0m[1;33m([0m[0mobj[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m     96[0m     [1;32mtry[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[1;32m---> 97[1;33m         return json.dumps(
[0m[0;32m     98[0m             [0mobj[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m
[0;32m     99[0m             [0mdefault[0m[1;33m=[0m[0mjson_default[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\AppData\Local\Programs\Python\Python310\lib\json\__init__.py[0m in [0;36mdumps[1;34m(obj, skipkeys, ensure_ascii, check_circular, allow_nan, cls, indent, separators, default, sort_keys, **kw)[0m
[0;32m    236[0m         [0mcheck_circular[0m[1;33m=[0m[0mcheck_circular[0m[1;33m,[0m [0mallow_nan[0m[1;33m=[0m[0mallow_nan[0m[1;33m,[0m [0mindent[0m[1;33m=[0m[0mindent[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m
[0;32m    237[0m         [0mseparators[0m[1;33m=[0m[0mseparators[0m[1;33m,[0m [0mdefault[0m[1;33m=[0m[0mdefault[0m[1;33m,[0m [0msort_keys[0m[1;33m=[0m[0msort_keys[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 238[1;33m         **kw).encode(obj)
[0m[0;32m    239[0m [1;33m[0m[0m
[0;32m    240[0m [1;33m[0m[0m

[1;32m~\AppData\Local\Programs\Python\Python310\lib\json\encoder.py[0m in [0;36mencode[1;34m(self, o)[0m
[0;32m    197[0m         [1;31m# exceptions aren't as detailed.  The list call should be roughly[0m[1;33m[0m[1;33m[0m[0m
[0;32m    198[0m         [1;31m# equivalent to the PySequence_Fast that ''.join() would do.[0m[1;33m[0m[1;33m[0m[0m
[1;32m--> 199[1;33m         [0mchunks[0m [1;33m=[0m [0mself[0m[1;33m.[0m[0miterencode[0m[1;33m([0m[0mo[0m[1;33m,[0m [0m_one_shot[0m[1;33m=[0m[1;32mTrue[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    200[0m         [1;32mif[0m [1;32mnot[0m [0misinstance[0m[1;33m([0m[0mchunks[0m[1;33m,[0m [1;33m([0m[0mlist[0m[1;33m,[0m [0mtuple[0m[1;33m)[0m[1;33m)[0m[1;33m:[0m[1;33m[0m[1;33m[0m[0m
[0;32m    201[0m             [0mchunks[0m [1;33m=[0m [0mlist[0m[1;33m([0m[0mchunks[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m

[1;32m~\AppData\Local\Programs\Python\Python310\lib\json\encoder.py[0m in [0;36miterencode[1;34m(self, o, _one_shot)[0m
[0;32m    255[0m                 [0mself[0m[1;33m.[0m[0mkey_separator[0m[1;33m,[0m [0mself[0m[1;33m.[0m[0mitem_separator[0m[1;33m,[0m [0mself[0m[1;33m.[0m[0msort_keys[0m[1;33m,[0m[1;33m[0m[1;33m[0m[0m
[0;32m    256[0m                 self.skipkeys, _one_shot)
[1;32m--> 257[1;33m         [1;32mreturn[0m [0m_iterencode[0m[1;33m([0m[0mo[0m[1;33m,[0m [1;36m0[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    258[0m [1;33m[0m[0m
[0;32m    259[0m def _make_iterencode(markers, _default, _encoder, _indent, _floatstr,

[1;32m~\AppData\Local\Programs\Python\Python310\lib\site-packages\jupyter_client\jsonutil.py[0m in [0;36mjson_default[1;34m(obj)[0m
[0;32m    124[0m         [1;32mreturn[0m [0mfloat[0m[1;33m([0m[0mobj[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0;32m    125[0m [1;33m[0m[0m
[1;32m--> 126[1;33m     [1;32mraise[0m [0mTypeError[0m[1;33m([0m[1;34m"%r is not JSON serializable"[0m [1;33m%[0m [0mobj[0m[1;33m)[0m[1;33m[0m[1;33m[0m[0m
[0m[0;32m    127[0m [1;33m[0m[0m
[0;32m    128[0m [1;33m[0m[0m

[1;31mTypeError[0m: HTML(value='<b>Test 1</b>') is not JSON serializable
TypeError: HTML(value='<b>Test 1</b>') is not JSON serializable

